#!/usr/bin/env python
"""
eldr_coverage_report

Tool for running the python coverage tool against a project. Coverage reports
are generated by running against test files named TestAll.py which should be
test suites that collectively reference all of the test cases written in the
project. Once reports have been generated, an html report is written to the
root of the project under docs/html/coverage.
"""

import os
import shutil
import sys
import tempfile

##
# BOOTSTRAP: BEGIN
#
# Bootstrapping code to ensure we can find all the right modules. All other
# local imports should be done after this block.
##
__path = os.path.dirname(os.path.realpath(__file__)) + "/../lib/python"
sys.path.insert(0, __path)
##
# BOOTSTRAP: END
##
from eldr.app import App
from eldr.app.mixin.runexecutable import RunExecutableMixin


class EldrCoverageReport(RunExecutableMixin, App):

    def __init__(self, *args, **kwargs):

        super(EldrCoverageReport, self).__init__(*args, **kwargs)

        # Determine the project's root directory.
        root = os.path.abspath(os.path.dirname(os.path.realpath(__file__))
                               + "/..")

        # Initialize output/input paths based on the root directory.
        self._html_dir = "{}/docs/html/coverage".format(root)
        self._source_dir = "{}/lib/python".format(root)
        self._target_file = "TestAll.py"
        self._work_dir = tempfile.mkdtemp()

    def main(self):

        # Log the parameters for the current run.
        self.log.info("Run parameters:")
        self.log.info("- work_dir={}".format(self._work_dir))
        self.log.info("- html_dir={}".format(self._html_dir))
        self.log.info("- source_dir={}".format(self._source_dir))
        self.log.info("- target_file={}".format(self._target_file))

        # Run the coverage report for each test suite found and then generate
        # the html report.
        self.log.info("Running coverage")
        for target in self._test_files():
            self.log.info("- Working on {}".format(target))
            self._run_coverage(target)
        self._generate_html()

        # Clean up the temp work directory.
        shutil.rmtree(self._work_dir)

    def _generate_html(self):

        # Run the coverage command to generate an html report.
        cmd = ["coverage",
               "html",
               "-d", self._html_dir]
        for line in self.run_executable(cmd, cwd=self._work_dir):
            self.log.debug("  > {}".format(line.rstrip()))

    def _run_coverage(self, target):

        # Run the coverage command to generate the coverage reports.
        cmd = ["coverage",
               "run",
               "-a",
               "--branch",
               "--omit", "*/unittest/*",
               target]
        for line in self.run_executable(cmd, cwd=self._work_dir):
            self.log.debug("  > {}".format(line.rstrip()))

    def _test_files(self):
        # Generate a list of test files to run coverae reports on.
        for (dirpath, dirs, files) in os.walk(self._source_dir):
            if self._target_file in files:
                target = "{}/{}".format(dirpath, self._target_file)
                yield target


if __name__ == "__main__":
    app = EldrCoverageReport()
    app.run()
